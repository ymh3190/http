# upstream front {
#     server  host.docker.internal:3000;
# }

upstream back {
    server  host.docker.internal:4000;
}

map $http_origin $allowed_origin {
    default "";
    "http://127.0.0.1" $http_origin;
    "http://localhost" $http_origin;
}

# reference: https://github.com/gusgad/youtube-tutorials/tree/nodejs-nginx
# server {
#     listen 80;
#     server_name localhost;
#     return 301 https://$host$request_uri; # permanent
# }

# server {
#     listen 443 ssl;
#     server_name domain.com www.domain.com;

#     ssl_certificate /path/to/your/ssl_certificate.crt;
#     ssl_certificate_key /path/to/your/ssl_pricate_key.key;

#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384';

#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;

#     ssl_staping on;
#     ssl_staping_verify on;

#     ssl_trusted_certificate /path/to/your/trusted_certificate_authority.crt;

#     root /path/to/your/root;

#     proxy_buffering on;
#     proxy_buffer_size 8k;
#     proxy_buffers 2048 8k;
#     proxy_busy_buffers_size 16k;

#     location / {
#         proxy_pass http://back;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;

#         proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
#         proxy_redirect off;

#         error_page 500 502 503 504 /error.html;
#         location = /error.html {
#             root /path/to/your/error/page;
#             internal;
#         }
#     }

#     location ~* \.(jpg|jpeg|png|gif|ico)$ {
#         expires 30d;
#         add_header Cache-Control 'public, max-age=2592000';
#     }
# }

server {
    listen      80;
    server_name localhost;

    # location / {
    #     proxy_pass  http://front;
    # }

    location / {
        root    /usr/share/nginx/html/dist;
        try_files $uri @rewrites;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Cross-Origin-Resource-Policy' 'same-origin';
        add_header 'Referrer-Policy' 'no-referrer';
        add_header 'Strict-Transport-Security' 'max-age=15552000; includeSubDomains';
        add_header 'X-Content-Type-Options' 'nosniff';
        add_header 'X-Dns-Prefetch-Control' 'off';
        add_header 'X-Download-Options' 'noopen';
        add_header 'X-Frame-Options' 'SAMEORIGIN';
        add_header 'X-Permitted-Cross-Domain-Policies' 'none';
        add_header 'X-XSS-Protection' '0';
    }

    location @rewrites {
        rewrite ^(.+)$ /index.html last;
    }

    location /api {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $allowed_origin;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Credentials' 'true';
            return 204;
        }

        proxy_pass  http://back;
        proxy_hide_header 'Access-Control-Allow-Origin';
        add_header 'Access-Control-Allow-Origin' $allowed_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true';
    }
}
