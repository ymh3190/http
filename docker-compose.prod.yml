services:
  db:
    platform: linux/amd64
    build: ./db
    container_name: db
    env_file: ./.env
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    ports:
      - ${DB_PORT}:${DB_PORT}
    expose:
      - ${DB_PORT}
    networks:
      - internalnet
  back:
    platform: linux/amd64
    build: ./backend
    container_name: back
    env_file: ./.env
    restart: on-failure
    ports:
      - ${BE_PORT}:${BE_PORT}
    expose:
      - ${BE_PORT}
    depends_on:
      - db
    networks:
      - internalnet
  front:
    platform: linux/amd64
    build: ./frontend
    container_name: front
    env_file: ./.env
    restart: on-failure
    ports:
      - ${FE_PORT}:${FE_PORT}
    expose:
      - ${FE_PORT}
    networks:
      - internalnet
  nginx:
    platform: linux/amd64
    image: nginx
    restart: on-failure
    environment:
      - FE_HOST=front
      - FE_PORT=3000
      - BE_HOST=back
      - BE_PORT=4000
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf.template
    command: /bin/bash -c "envsubst < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    ports:
      - 80:80
    networks:
      - tv

networks:
  internalnet:
    driver: bridge